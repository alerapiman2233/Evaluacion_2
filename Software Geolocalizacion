import requests

API_KEY = "3368c6a9-eb8b-4bfb-8fc1-82097d595929"
BASE_URL = "https://graphhopper.com/api/1/route"
GEOCODE_URL = "https://graphhopper.com/api/1/geocode"

def formatear_numero(num):
    return f"{num:.2f}"

def geocodificar(lugar):
    params = {"q": lugar, "limit": 1, "key": API_KEY}
    response = requests.get(GEOCODE_URL, params=params)
    if response.status_code != 200:
        print(f"Error en geocodificación: {response.status_code}")
        return None

    data = response.json()
    if not data["hits"]:
        print(f"No se encontraron coordenadas para '{lugar}'.")
        return None

    lat = data["hits"][0]["point"]["lat"]
    lon = data["hits"][0]["point"]["lng"]
    return f"{lat},{lon}"

def obtener_ruta(origen, destino):
    params = {
        "point": [origen, destino],
        "locale": "es",
        "key": API_KEY,
        "instructions": "true",
        "calc_points": "true"
    }

    response = requests.get(BASE_URL, params=params)
    if response.status_code != 200:
        print(f"Error al obtener la ruta: {response.status_code}")
        print(response.text)  
        return None

    return response.json()

def imprimir_instrucciones(ruta):
    path = ruta["paths"][0]  
    distancia_total = path["distance"] / 1000  
    tiempo_total = path["time"] / 60000  

    print("\n=== Resumen del viaje ===")
    print(f"Distancia total: {distancia_total:.1f} km")
    print(f"Tiempo estimado: {tiempo_total:.0f} min")

    print("\n=== Instrucciones del viaje ===")
    for instr in path["instructions"]:
        texto = instr["text"]
        distancia = instr["distance"] / 1000  # km
        # Convertir milisegundos a minutos y segundos
        minutos = int(instr["time"] / 60000)
        segundos = int((instr["time"] % 60000) / 1000)
        print(f"- {texto} (Distancia: {distancia:.2f} km, Tiempo: {minutos} min {segundos} s)")

def main():
    print("=== Software de Geolocalización con GraphHopper ===")
    while True:
        origen_nombre = input("Ingrese la ubicación de origen (o 's' para salir): ").strip()
        if origen_nombre.lower() in ("s", "salir"):
            print("Saliendo del programa. ¡Hasta luego!")
            break

        destino_nombre = input("Ingrese la ubicación de destino (o 's' para salir): ").strip()
        if destino_nombre.lower() in ("s", "salir"):
            print("Saliendo del programa. ¡Hasta luego!")
            break

        print("Buscando coordenadas...")
        origen = geocodificar(origen_nombre)
        destino = geocodificar(destino_nombre)

        if not origen or not destino:
            print("No se pudieron obtener coordenadas válidas. Intente con otro lugar.")
            continue

        print("Calculando la ruta, por favor espere...")
        ruta = obtener_ruta(origen, destino)
        if ruta:
            imprimir_instrucciones(ruta)
        else:
            print("No se pudo obtener la ruta. Intente de nuevo.")

if __name__ == "__main__":
    main()
